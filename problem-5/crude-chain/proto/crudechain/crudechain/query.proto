syntax = "proto3";

package crudechain.crudechain;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "crudechain/crudechain/params.proto";
import "crudechain/crudechain/user.proto";

option go_package = "crude-chain/x/crudechain/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/crude-chain/crudechain/params";
  
  }
  
  // Queries a list of ShowUser items.
  rpc ShowUser (QueryShowUserRequest) returns (QueryShowUserResponse) {
    option (google.api.http).get = "/crude-chain/crudechain/show_user/{id}";
  
  }
  
  // Queries a list of ListUser items.
  rpc ListUser (QueryListUserRequest) returns (QueryListUserResponse) {
    option (google.api.http).get = "/crude-chain/crudechain/list_user";
  }

  rpc UsersByAge(QueryUsersByAgeRequest) returns (QueryUsersByAgeResponse) {
      option (google.api.http).get = "/crude-chain/crudechain/users_by_age";
  }

  rpc UsersByGender(QueryUsersByGenderRequest) returns (QueryUsersByGenderResponse) {
    option (google.api.http).get = "/crude-chain/crudechain/users_by_gender/{gender}";
  }

}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowUserRequest {
  uint64 id = 1;
}

message QueryShowUserResponse {
  User user = 1 [(gogoproto.nullable) = false];
}

message QueryListUserRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListUserResponse {
  repeated User user = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryUsersByAgeRequest {
    uint64 age = 1;
}

message QueryUsersByAgeResponse {
    repeated User user = 1;
}

message QueryUsersByGenderRequest {
    string gender = 1;
}

message QueryUsersByGenderResponse {
    repeated User user = 1;
}